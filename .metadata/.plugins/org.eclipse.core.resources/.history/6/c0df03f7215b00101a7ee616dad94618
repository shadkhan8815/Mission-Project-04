package in.co.rays.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.naming.directory.SearchControls;

import com.mysql.cj.xdevapi.Result;

import in.co.rays.bean.CollegeBean;
import in.co.rays.exception.ApplicationException;
import in.co.rays.exception.DatabaseException;
import in.co.rays.exception.DuplicateRecordException;
import in.co.rays.exception.RecordNotFoundException;
import in.co.rays.util.JDBCDataSource;

public class CollegeModel {

	public Integer nextPk() throws ApplicationException, SQLException {
		 
		Connection conn = null ;
		
		int pk = 0 ;
		
		try {
			conn = JDBCDataSource.getConnection();
			
			PreparedStatement pstmt = conn.prepareStatement("select max(id) from st_college");
			
			ResultSet rs = pstmt.executeQuery();
			
			while (rs.next()) {
				rs.getLong(1);
			}
			rs.close();
			pstmt.close();
			
		} catch (Exception e) {
			throw new ApplicationException("Exception : " + e.getMessage());
		}finally {
			conn.close();
			JDBCDataSource.closeConnection(conn);
		}
		return pk + 1;
		
	}
//-----------------------------------------------------------------------------------
	
	public long add (CollegeBean bean) throws ApplicationException, SQLException, DatabaseException, DuplicateRecordException {
	
		Connection conn = null ;
		int pk = nextPk();
		
		try {
			conn = JDBCDataSource.getConnection();
			
			conn.setAutoCommit(false);
			
			PreparedStatement pstmt = conn.prepareStatement("insert into st_college values(?,?,?,?,?,?,?,?,?,?)");
			
			pstmt.setInt(1, pk);
			pstmt.setString(2, bean.getName());
			pstmt.setString(3, bean.getAddress());
			pstmt.setString(4, bean.getState());
			pstmt.setString(5, bean.getCity());
			pstmt.setString(6, bean.getPhoneNo());
			pstmt.setString(7, bean.getCreatedBy());
			pstmt.setString(8, bean.getModifiedBy());
			pstmt.setTimestamp(9, bean.getCreatedDatetime());
			pstmt.setTimestamp(10, bean.getModifiedDatetime()); 
			
			int i = pstmt.executeUpdate();
			
			conn.commit();
			pstmt.close();
			
			System.out.println("Data inserted => " + i);
			
		} catch (Exception e) {
			try {
				conn.rollback();
				
			} catch (Exception e2) {
				throw new DatabaseException("Exception : " + e2.getMessage());
			}
			throw new DuplicateRecordException("Exception : " + e.getMessage());
			
		}finally {
			conn.close();
			JDBCDataSource.closeConnection(conn);
		}
		return pk + 1;
	}
//-----------------------------------------------------------------------	
	public void update() throws DatabaseException, DuplicateRecordException, SQLException {
		
		Connection conn = null ;
		
		CollegeBean bean = null ;
		
		try {
			conn = JDBCDataSource.getConnection();
			
			conn.setAutoCommit(false);
			
			PreparedStatement pstmt = conn.prepareStatement(
					"update st_college set name=?,address=?,state=?,city=?,phone_no=?,created_by=?,modified_by=?,created_datetime=?,modified_datetime=? where id=?");
			
			pstmt.setString(1, bean.getName());
			pstmt.setString(2, bean.getAddress());
			pstmt.setString(3, bean.getState());
			pstmt.setString(4, bean.getCity());
			pstmt.setString(5, bean.getPhoneNo());
			pstmt.setString(6, bean.getCreatedBy());
			pstmt.setString(7, bean.getModifiedBy());
			pstmt.setTimestamp(8, bean.getCreatedDatetime());
			pstmt.setTimestamp(9, bean.getModifiedDatetime());
			pstmt.setLong(10, bean.getId());
			
			int i = pstmt.executeUpdate();
			
			conn.commit();
			pstmt.close();
			
			System.out.println("Data deleted => " + i);
			
		} catch (Exception e) {
			try {
				conn.rollback();
			} catch (Exception e2) {
				throw new DatabaseException("Exception : " + e2.getMessage());
				}
			throw new DuplicateRecordException("Exception : " + e.getMessage());
		}finally {
			conn.close();
			JDBCDataSource.closeConnection(conn);
		}
	}
//------------------------------------------------------------------------------------------
	
	public void delete(long id) throws ApplicationException, RecordNotFoundException, SQLException {
		
		Connection conn = null ;
		
		try {
			conn = JDBCDataSource.getConnection();
			
			conn.setAutoCommit(false);
			
			PreparedStatement pstmt = conn.prepareStatement("delete from st_college where id=?");
			
			pstmt.setLong(1, id);
			
			conn.commit();
			
			pstmt.close();
			
			int i = pstmt.executeUpdate();
			
		} catch (Exception e) {
			try {
				conn.rollback();
				
			} catch (Exception e2) {
				throw new ApplicationException("Exception : " + e2.getMessage());
			}
			throw new RecordNotFoundException("Exception : " + e.getMessage());
		}finally {
			conn.close();
			JDBCDataSource.closeConnection(conn);
		}
	}
//------------------------------------------------------------------------------------------------
	
	public List list () {
		return search(bean, 0, 0);
	}
//------------------------------------------------------------------------------------------
	
	public List search (CollegeBean bean, int pageNo, int pageSize) throws RecordNotFoundException, SQLException {
		
		StringBuffer sql = new StringBuffer("select * from st_college where 1=1");

		if (bean != null) {
			if (bean.getName() != null && bean.getName().length() > 0) {
				sql.append(" and first_name like '" + bean.getName() + "%'");
			}
		}
		
		if (pageSize > 0) {
			pageNo = (pageNo - 1) * pageSize;
			sql.append(" limit " + pageNo + ", " + pageSize);
		}

		
		Connection conn = null ;
		
		List list = new ArrayList();
		
		try {
			conn = JDBCDataSource.getConnection();
			
			PreparedStatement pstmt = conn.prepareStatement(sql.toString());
			
			ResultSet rs = pstmt.executeQuery();
			
			while (rs.next()) {
				
				bean = new CollegeBean();
				bean.setId(rs.getLong(1));
				bean.setName(rs.getString(2));
				bean.setAddress(rs.getString(3));
				bean.setState(rs.getString(4));
				bean.setCity(rs.getString(5));
				bean.setPhoneNo(rs.getString(6));
				bean.setCreatedBy(rs.getString(7));
				bean.setModifiedBy(rs.getString(8));
				bean.setCreatedDatetime(rs.getTimestamp(9));
				bean.setModifiedDatetime(rs.getTimestamp(10));

			}
			
			list.add(bean);
			rs.close();
			pstmt.close();
			
		} catch (Exception e) {
			throw new RecordNotFoundException("Exception : " + e.getMessage());
		}finally {
			conn.close();
			JDBCDataSource.closeConnection(conn);
		}
		return list;
		
	}
	
}